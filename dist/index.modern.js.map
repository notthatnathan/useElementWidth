{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\n/**\n * Returns current width of specified element.\n *\n * @param {Ref} ref element to use in width calculation\n */\nconst useElementWidth = ref => {\n  const getWidth = useCallback(() => {\n    return ref?.current?.getBoundingClientRect().width * (window.visualViewport?.scale || 1) || 0\n  }, [ref?.current])\n  const [width, setWidth] = useState(0)\n\n  const elObserver = new ResizeObserver(entries => {\n    window.requestAnimationFrame(() => {\n      if (!ref?.current) return\n\n      if (entries?.[0]?.contentBoxSize?.[0]) {\n        setWidth(entries[0].contentBoxSize[0].inlineSize)\n      } else if (entries?.contentBoxSize) {\n        setWidth(entries[0].contentBoxSize.inlineSize)\n      } else {\n        setWidth(entries[0].contentRect.width)\n      }\n    })\n  })\n\n  useEffect(() => {\n    setWidth(getWidth())\n  }, [ref?.current])\n\n  useEffect(() => {\n    if (!ref?.current) return\n\n    elObserver.observe(ref?.current)\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (!ref?.current) return\n      elObserver.unobserve(ref?.current)\n    }\n  })\n\n  return width\n}\n\nexport default useElementWidth\n"],"names":["ref","getWidth","useCallback","current","getBoundingClientRect","width","window","visualViewport","scale","setWidth","useState","elObserver","ResizeObserver","entries","requestAnimationFrame","_entries$","contentBoxSize","_entries$$contentBoxS","inlineSize","contentRect","useEffect","observe","unobserve"],"mappings":"gFAOwBA,IACtB,MAAMC,EAAWC,EAAY,aAC3B,OAAOF,MAAAA,aAAAA,EAAKG,8BAASC,wBAAwBC,mBAASC,OAAOC,qCAAgBC,QAAS,IAAM,GAC3F,CAACR,MAAAA,SAAAA,EAAKG,WACFE,EAAOI,GAAYC,EAAS,GAE7BC,EAAa,IAAIC,eAAeC,IACpCP,OAAOQ,sBAAsB,aACtBd,MAAAA,GAAAA,EAAKG,UAENU,MAAAA,aAAAA,EAAU,2BAAVE,EAAcC,6BAAdC,EAA+B,GACjCR,EAASI,EAAQ,GAAGG,eAAe,GAAGE,YAEtCT,EADSI,MAAAA,GAAAA,EAASG,eACTH,EAAQ,GAAGG,eAAeE,WAE1BL,EAAQ,GAAGM,YAAYd,YAqBtC,OAhBAe,EAAU,KACRX,EAASR,MACR,CAACD,MAAAA,SAAAA,EAAKG,UAETiB,EAAU,KACR,GAAKpB,MAAAA,GAAAA,EAAKG,QAKV,OAHAQ,EAAWU,QAAQrB,MAAAA,SAAAA,EAAKG,SAGjB,KACAH,MAAAA,GAAAA,EAAKG,SACVQ,EAAWW,UAAUtB,MAAAA,SAAAA,EAAKG,YAIvBE"}